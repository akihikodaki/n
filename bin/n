#!/usr/bin/env python3
# SPDX-License-Identifier: 0BSD

import shlex
import os
import pathlib
import sys

def read(file):
  environ = {}
  for entry in file.read().split("\0"):
    if not entry:
      continue

    key, value = entry.split("=", maxsplit=1)
    environ[key] = value

  return environ

parent = pathlib.Path(__file__).parent

if not os.path.isdir("/nix"):
  enter = parent / "n-enter"
  os.execl(enter, enter, *sys.argv)

argv = sys.argv[1:] or ["bash"]
cwd = os.getcwd()

proc_fd = os.open("/proc", os.O_DIRECTORY)
try:
  for proc_entry in os.scandir(proc_fd):
    path = os.path.join(proc_entry.name, "environ")
    try:
      fd = os.open(path, os.O_RDONLY, dir_fd=proc_fd)
    except OSError:
      continue

    with open(fd) as file:
      environ = read(file)

    if environ.get("NWD") != cwd:
      continue

    path = os.path.join(proc_entry.name, "fd", environ["NFD"])
    fd = os.open(path, os.O_RDONLY, dir_fd=proc_fd)

    with open(fd) as file:
      os.set_inheritable(fd, True)
      environ = read(file)
      environ["NFD"] = str(fd)
      environ["NWD"] = cwd
      os.execvpe(argv[0], argv, environ)
finally:
  os.close(proc_fd)

os.execlp("nix-shell", "nix-shell", "--pure", "--run",
           f'exec {shlex.join([str(parent / "n-env"), *argv])}')
