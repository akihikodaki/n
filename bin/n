#!/usr/bin/env python3
# SPDX-License-Identifier: 0BSD

import shlex
import os
import pathlib
import sys

parent = pathlib.Path(__file__).parent

if not os.path.isdir("/nix"):
  enter = parent / "n-enter"
  os.execl(enter, enter, *sys.argv)

argv = sys.argv[1:] or ["bash"]
cwd = os.getcwd()

proc_fd = os.open("/proc", os.O_DIRECTORY)
try:
  for proc_entry in os.scandir(proc_fd):
    fd_path = os.path.join(proc_entry.name, "fd")

    try:
      fd_fd = os.open(fd_path, os.O_DIRECTORY, dir_fd=proc_fd)
    except OSError:
      continue
    try:
      for fd_entry in os.scandir(fd_fd):
        try:
          link = os.readlink(fd_entry.name, dir_fd=fd_fd)
        except PermissionError:
          continue

        if link != '/memfd:n (deleted)':
          continue

        environ_fd = os.open(fd_entry.name, os.O_RDONLY, dir_fd=fd_fd)

        with open(environ_fd) as environ_file:
          environ_str = environ_file.read()

        environ = {}
        for entry in environ_str.split("\0"):
          if not entry:
            continue

          key, value = entry.split("=", maxsplit=1)
          environ[key] = value

        os.execvpe(argv[0], argv, environ)
    finally:
      os.close(fd_fd)
finally:
  os.close(proc_fd)

os.execlp("nix-shell", "nix-shell", "--pure", "--run",
           f'exec {shlex.join([str(parent / "n-env"), *argv])}')
